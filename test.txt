# Research Paper Fetcher Test Commands
# Copy and paste these commands one by one to test the functionality

# ===================================
# BASIC FUNCTIONALITY TESTS
# ===================================

# Test 1: Basic Johnson & Johnson vaccine search
poetry run get-papers-list "Johnson & Johnson vaccine" --max-results 5 --debug

# Test 2: Alternative J&J query format
poetry run get-papers-list "J&J vaccine" --max-results 5 --debug

# Test 3: Janssen (J&J subsidiary) search
poetry run get-papers-list "Janssen vaccine" --max-results 5 --debug

# Test 4: COVID-19 vaccine with company name
poetry run get-papers-list "Johnson & Johnson COVID-19 vaccine" --max-results 10 --debug

# ===================================
# DIFFERENT COMPANY TESTS
# ===================================

# Test 5: Pfizer vaccine search
poetry run get-papers-list "Pfizer vaccine" --max-results 5 --debug

# Test 6: Moderna vaccine search
poetry run get-papers-list "Moderna vaccine" --max-results 5 --debug

# Test 7: AstraZeneca vaccine search
poetry run get-papers-list "AstraZeneca vaccine" --max-results 5 --debug

# Test 8: Multiple companies search
poetry run get-papers-list "Pfizer OR Moderna vaccine" --max-results 10 --debug

# ===================================
# FILE OUTPUT TESTS
# ===================================

# Test 9: Save to custom file
poetry run get-papers-list "Johnson & Johnson vaccine" --max-results 5 --file jj_test.csv

# Test 10: Debug mode with file output
poetry run get-papers-list "Pfizer COVID vaccine" --max-results 5 --debug --file pfizer_test.csv

# Test 11: Table format display
poetry run get-papers-list "Moderna vaccine" --max-results 3 --table

# Test 12: Detailed export with abstracts
poetry run get-papers-list "AstraZeneca vaccine" --max-results 3 --detailed --file astra_detailed.csv

# ===================================
# EDGE CASE TESTS
# ===================================

# Test 13: Very specific query
poetry run get-papers-list "Johnson & Johnson Ad26.COV2.S vaccine" --max-results 5 --debug

# Test 14: Broader pharmaceutical search
poetry run get-papers-list "pharmaceutical company vaccine development" --max-results 10 --debug

# Test 15: Biotech company search
poetry run get-papers-list "biotech vaccine clinical trial" --max-results 8 --debug

# Test 16: Different therapeutic area
poetry run get-papers-list "Pfizer cancer immunotherapy" --max-results 5 --debug

# ===================================
# LARGE RESULT TESTS
# ===================================

# Test 17: Large result set
poetry run get-papers-list "vaccine" --max-results 50 --debug

# Test 18: Maximum results test
poetry run get-papers-list "Johnson & Johnson" --max-results 100 --debug

# ===================================
# QUERY FORMAT TESTS
# ===================================

# Test 19: Boolean AND query
poetry run get-papers-list "Johnson AND Johnson AND vaccine" --max-results 5 --debug

# Test 20: Boolean OR query
poetry run get-papers-list "Janssen OR Johnson & Johnson" --max-results 10 --debug

# Test 21: Quoted phrase search
poetry run get-papers-list '"Johnson & Johnson vaccine"' --max-results 5 --debug

# Test 22: Field-specific search (if supported)
poetry run get-papers-list "Johnson & Johnson[Affiliation]" --max-results 5 --debug

# ===================================
# ERROR HANDLING TESTS
# ===================================

# Test 23: Very narrow search (should return few/no results)
poetry run get-papers-list "nonexistent pharmaceutical company xyz123" --max-results 5 --debug

# Test 24: Special characters in query
poetry run get-papers-list "Johnson & Johnson COVID-19 mRNA" --max-results 5 --debug

# Test 25: Long query test
poetry run get-papers-list "Johnson & Johnson coronavirus vaccine clinical trial phase 3 efficacy safety" --max-results 5 --debug

# ===================================
# DIFFERENT OUTPUT FORMATS
# ===================================

# Test 26: No file output (console only)
poetry run get-papers-list "Moderna vaccine" --max-results 3 --debug --auto-save=false

# Test 27: Combined table and file output
poetry run get-papers-list "Pfizer vaccine" --max-results 3 --table --file pfizer_table_test.csv

# ===================================
# API PARAMETER TESTS
# ===================================

# Test 28: With email parameter (replace with your email)
poetry run get-papers-list "Johnson & Johnson vaccine" --max-results 5 --email your.email@example.com --debug

# Test 29: Small result set for quick testing
poetry run get-papers-list "Johnson & Johnson vaccine" --max-results 2 --debug

# Test 30: Medium result set
poetry run get-papers-list "Johnson & Johnson vaccine" --max-results 20 --debug

# ===================================
# HELP AND VERSION TESTS
# ===================================

# Test 31: Help command
poetry run get-papers-list --help

# Test 32: Version command
poetry run get-papers-list --version

# ===================================
# STRESS TESTS (Use cautiously)
# ===================================

# Test 33: Large company search (may take time)
# poetry run get-papers-list "pharmaceutical" --max-results 200 --debug

# Test 34: Multiple company names
# poetry run get-papers-list "Pfizer OR Moderna OR Johnson & Johnson OR AstraZeneca" --max-results 50 --debug

# ===================================
# VALIDATION TESTS
# ===================================

# Test 35: Verify CSV file was created
# dir *.csv

# Test 36: Check CSV content (Windows)
# type jj_test.csv | more

# Test 37: Count lines in CSV (to verify results)
# powershell "Import-Csv jj_test.csv | Measure-Object | Select-Object Count"

# ===================================
# QUICK SUCCESS VERIFICATION TESTS
# ===================================

# Test 38: Known working queries for quick verification
poetry run get-papers-list "Janssen Ad26" --max-results 3 --debug
poetry run get-papers-list "Pfizer BioNTech" --max-results 3 --debug
poetry run get-papers-list "Moderna mRNA" --max-results 3 --debug

# ===================================
# PERFORMANCE TESTS
# ===================================

# Test 39: Time the execution (Windows PowerShell)
# Measure-Command { poetry run get-papers-list "Johnson & Johnson vaccine" --max-results 10 }

# ===================================
# FILE CLEANUP COMMANDS
# ===================================

# Clean up test files when done
# del *.csv
# del *_test.csv
# del *_detailed.csv

# ===================================
# NOTES FOR TESTING
# ===================================

# 1. Run tests one by one to avoid hitting API rate limits
# 2. Check the generated CSV files to verify correct data format
# 3. Some queries may return 0 results - this is normal for very specific searches
# 4. If you get rate limited, wait a few minutes before continuing
# 5. The --debug flag shows detailed API calls and can help troubleshoot issues
# 6. Expected columns in CSV: PubmedID, Title, Publication Date, Non-academic Author(s), Company Affiliation(s), Corresponding Author Email
